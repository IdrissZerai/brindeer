version: "3"

volumes:
  kong-datastore:
  
services:
  postgres:
    image: postgres
    environment:
      POSTGRES_PASSWORD: keycloak
      POSTGRES_USER: keycloak
      POSTGRES_DB: keycloak
      PGADMIN_CONFIG_SERVER_MODE: "False"
      
  keycloak:
    build: ./keycloak
    depends_on:
      - postgres
    environment:
      KEYCLOAK_USER: keycloak
      KEYCLOAK_PASSWORD: keycloak
      KEYCLOAK_IMPORT: /tmp/tindeer-realm.json
      DB_VENDOR: postgres
      DB_ADDR: postgres
      DB_USER: keycloak
      DB_PASSWORD: keycloak
    ports:
      - 8080:8080

  pgadmin:
    build: ./pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: keycloak@tindeer.com
      PGADMIN_DEFAULT_PASSWORD: keycloak
    ports:
      - 5050:80
    depends_on:
      - postgres  

  mongo:
    image: mongo
    ports:
      - "27017:27017"

  profile:
    build:
      context: brinder-profile-api/
      dockerfile: Dockerfile
    ports:
      - 9080:8080
    environment:
      spring_profiles_active: security,docker
      keycloak_credentials_secret: 32c0d787-abe3-4d70-b2aa-2d0f45206507
    depends_on:
      - mongo
      - keycloak

  swagger:
    image: swaggerapi/swagger-ui
    environment:
      SWAGGER_JSON: /doc/tindeer.yaml
      DEEP_LINKING: "true"
      OAUTH2_REDIRECT_URL: http://localhost:8888/oauth2-redirect.html
      OAUTH_CLIENT_ID: swagger
      OAUTH_USE_PKCE: "true"  
      OAUTH_REALM: tindeer
      OAUTH_APP_NAME: swagger
    ports: 
      - 8888:8080
    volumes:
      - ./swagger:/doc
  kong:
    build:
      context: kong/
      dockerfile: Dockerfile
    depends_on:
      - kong-db
    environment:
      KONG_DATABASE: postgres
      KONG_PG_HOST: kong-db
      KONG_PG_PORT: 5432
      KONG_PG_DATABASE: api-gw
      KONG_PROXY_ACCESS_LOG: /dev/stdout
      KONG_ADMIN_ACCESS_LOG: /dev/stdout
      KONG_PROXY_ERROR_LOG: /dev/stderr
      KONG_ADMIN_ERROR_LOG: /dev/stderr
      KONG_PROXY_LISTEN: 0.0.0.0:8000, 0.0.0.0:8443 ssl
      KONG_ADMIN_LISTEN: 0.0.0.0:8001, 0.0.0.0:8444 ssl
      KONG_PLUGINS: bundled,oidc
      KONG_LOG_LEVEL: debug
      KONG_NGINX_HTTP_LUA_SHARED_DICT: introspection 10m
    ports:
      - "8000:8000" #listener
      - "8443:8443" #admin api
      - "8001:8001" #listener ssl
      - "8444:8444" #admin
      
  kong-db:
    image: postgres:9.6
    volumes:
      - kong-datastore:/var/lib/postgresql/data
    ports:
      - "15432:5432"
    environment:
      POSTGRES_DB: api-gw
      POSTGRES_USER: kong
      POSTGRES_PASSWORD:
      POSTGRES_HOST_AUTH_METHOD: trust